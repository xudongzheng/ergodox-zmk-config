#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&sk {
	quick-release;
};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&none   &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp PRSC   &none      &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0  &bootloader
				&kp TAB &kp Q        &kp W        &kp F        &kp P        &kp G        &kp CLCK   &kp M_MUTE &kp J        &kp L        &kp U        &kp Y        &kp SEMICOLON &rgb_ug RGB_COLOR_HSB(0,100,0)
				&kp ESC &kp A        &kp R        &kp S        &kp T        &kp D                              &kp H        &kp N        &kp E        &kp I        &kp O         &rgb_ug RGB_COLOR_HSB(120,100,20)
				&mo 2   &kp Z        &kp X        &kp C        &kp V        &kp B        &kp M_VOLD &kp M_VOLU &kp K        &kp M        &kp CMMA     &kp DOT      &kp FSLH      &rgb_ug RGB_COLOR_HSB(240,100,20)
				&none   &none        &sk LALT     &kp LARW     &kp UARW                                                     &kp DARW     &kp RARW     &sk LALT     &none         &rgb_ug RGB_COLOR_HSB(0,100,20)
				                                                            &none        &none      &none      &none
				                                               &sk LSFT     &sk LCTL     &none      &none      &kp SPC      &sk LGUI
				                                                                         &kp RET    &mo 1
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&none        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &none &none &none   &none   &none   &none   &bootloader
				&out OUT_USB &kp F1       &kp F2       &kp F3       &kp F4       &kp DEL      &none &none &none &kp F13 &kp F14 &kp F15 &kp F16 &none
				&out OUT_BLE &kp F5       &kp F6       &kp F7       &kp F8       &kp INS                  &none &kp F17 &kp F18 &kp F19 &kp F20 &none
				&none        &kp F9       &kp F10      &kp F11      &kp F12      &none        &none &none &none &kp F21 &kp F22 &kp F23 &kp F24 &bt BT_CLR
				&none        &none        &none        &none        &none                                       &none   &none   &none   &none   &none
				                                                                 &none        &none &none &none
				                                                    &none        &none        &none &none &none &none
				                                                                              &none &none
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&none &none         &none            &none       &none       &none       &none          &none            &none                &none                 &none          &none          &none           &none
				&none &none         &kp RA(NUMBER_1) &m_608dc58a &m_1dd2bdf8 &kp HASH    &kp C_POWER    &kp C_PLAY_PAUSE &m_a0703185          &m_95e8efd5           &m_45c82965    &none          &none           &m_f52a2255
				&none &m_95c072f9   &kp EXCLAMATION  &kp PLUS    &kp EQUAL   &kp DOLLAR                                  &kp AMPERSAND        &m_d8cf10b8           &m_ff29b7ae    &m_e086e42f    &m_fa0e9088     &m_de17c794
				&none &kp RA(SLASH) &kp AT           &kp LBKT    &kp RBKT    &kp PERCENT &kp C_PREVIOUS &kp C_NEXT       &kp ASTERISK         &kp MINUS             &kp UNDERSCORE &kp LEFT_BRACE &kp RIGHT_BRACE &none
				&none &none         &none            &kp HOME    &kp PGUP                                                                     &kp PGDN              &kp END        &sk RALT       &none           &none
				                                                             &none       &none          &none            &none
				                                                 &m_c1b04aa0 &m_766fb4e0 &none          &none            &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS
				                                                                         &none          &none
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&none   &none     &none        &none     &none    &none    &none                &none                &none   &none        &none        &none        &none        &none
				&kp TAB &none     &none        &none     &none    &none    &none                &none                &none   &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &none        &none
				&none   &kp SLASH &kp ASTERISK &kp MINUS &kp PLUS &none                                              &none   &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp BKSP
				&none   &none     &none        &none     &kp DOT  &none    &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &none   &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &none        &none
				&none   &none     &sk LALT     &kp LEFT  &kp UP                                                              &kp DOWN     &kp RIGHT    &sk LALT     &none        &to 0
				                                                  &none    &none                &none                &none
				                                         &sk LSFT &sk LCTL &none                &none                &kp SPC &sk LGUI
				                                                           &kp RET              &none
			>;
		};
	};

	ZMK_MACRO(m_608dc58a, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp TILDE>, <&macro_tap &kp SPACE>;)
	ZMK_MACRO(m_1dd2bdf8, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp GRAVE>, <&macro_tap &kp SPACE>;)
	ZMK_MACRO(m_95c072f9, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp SINGLE_QUOTE>, <&macro_tap &kp A>;)
	ZMK_MACRO(m_e086e42f, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp SINGLE_QUOTE>, <&macro_tap &kp I>;)
	ZMK_MACRO(m_45c82965, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp SINGLE_QUOTE>, <&macro_tap &kp U>;)
	ZMK_MACRO(m_a0703185, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp CARET>, <&macro_tap &kp SPACE>;)
	ZMK_MACRO(m_f52a2255, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp GRAVE>, <&macro_tap &kp GRAVE>, <&macro_tap &kp GRAVE>, <&macro_tap &kp SPACE>;)
	ZMK_MACRO(m_c1b04aa0, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp SINGLE_QUOTE>, <&macro_tap &kp SPACE>;)
	ZMK_MACRO(m_de17c794, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp ASTERISK>, <&macro_tap &kp ASTERISK>;)
	ZMK_MACRO(m_766fb4e0, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp DOUBLE_QUOTES>, <&macro_tap &kp SPACE>;)
	ZMK_MACRO(m_95e8efd5, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp DOUBLE_QUOTES>, <&macro_tap &kp U>;)
	ZMK_MACRO(m_d8cf10b8, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp TILDE>, <&macro_tap &kp N>;)
	ZMK_MACRO(m_ff29b7ae, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp SINGLE_QUOTE>, <&macro_tap &kp E>;)
	ZMK_MACRO(m_fa0e9088, wait-ms = <40>; tap-ms = <40>; bindings = <&macro_tap &kp SINGLE_QUOTE>, <&macro_tap &kp O>;)
};
